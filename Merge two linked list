/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} list1
 * @param {ListNode} list2
 * @return {ListNode}
 */
var mergeTwoLists = function (list1, list2) {
    let dummyNode = new ListNode(-1);
    temp = dummyNode;
    temp1 = list1;
    temp2 = list2;

    while (temp1 != null && temp2 != null) {
        if (temp1.val <= temp2.val) {
            temp.next = temp1;
            temp = temp1;
            temp1 = temp1.next;
        }
        else {
            temp.next = temp2;
            temp = temp2;
            temp2 = temp2.next;
        }
    }
    if (temp1 != null) {
        temp.next = temp1;
    }
    else {
        temp.next = temp2;
    }
    return dummyNode.next;

};
