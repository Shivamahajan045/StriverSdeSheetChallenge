class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {

        // Tc = O(log(n*m))

        int n = matrix.length;
        int m = matrix[0].length;
        int low = 0;
        int high = (n * m) - 1;

        while (low <= high) {
            int mid = (low + high) / 2;

            int row = mid / m;
            int col = mid % m;

            if (matrix[row][col] == target) {
                return true;
            } else if (matrix[row][col] < target) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }

        return false;

        // Tc = O(n*m)
        /*
         * for(int i=0; i<matrix.length; i++){
         * for(int j=0; j<matrix[i].length; j++){
         * if(matrix[i][j] == target){
         * return true;
         * }
         * }
         * }
         * return false;
         * 
         */
    }
}
