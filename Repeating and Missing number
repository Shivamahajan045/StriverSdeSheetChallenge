long n = A.length;
        long sn = (n*(n+1)) / 2;
        long s2n = (n*(n+1)*(2*n+1)) / 6;
        long  s = 0, s2 = 0;
        for(int i=0; i<n; i++){
            s += A[i];
            s2 += (long)A[i] * (long)A[i];
        }
        long Val1 = s - sn;
        long Val2 = s2 - s2n;
        Val2 = Val2 / Val1;
        
        long x = (Val1 + Val2) / 2;
        long y = x - Val1;
        
        
        int[] arr = {(int)x, (int)y};
        
        return arr;
        
        
        
        
        
        // long n = A.length; // size of the array
        // // Find Sn and S2n:
        // long SN = (n * (n + 1)) / 2;
        // long S2N = (n * (n + 1) * (2 * n + 1)) / 6;

        // // Calculate S and S2:
        // long S = 0, S2 = 0;
        // for (int i = 0; i < n; i++) {
        //     S += A[i];
        //     S2 += (long)A[i] * (long)A[i];
        // }

        // //S-Sn = X-Y:
        // long val1 = S - SN;

        // // S2-S2n = X^2-Y^2:
        // long val2 = S2 - S2N;
        
        // //Find X+Y = (X^2-Y^2)/(X-Y):
        // val2 = val2 / val1;

        // //Find X and Y: X = ((X+Y)+(X-Y))/2 and Y = X-(X-Y),
        // // Here, X-Y = val1 and X+Y = val2:
        // long x = (val1 + val2) / 2;
        // long y = x - val1;

        // int[] ans = {(int)x, (int)y};
        // return ans;
